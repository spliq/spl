# ─────────────────────────────────────────────────────────────────
# SPL Critical Pattern: Entity v2.3
# ─────────────────────────────────────────────────────────────────
# Version: 2.3
# Owner: SPLiQ team
# License: Apache 2.0
# ─────────────────────────────────────────────────────────────────

version: 2.3
schema: spl.meta-pattern.v2.3
id: "template/entity:v2.3"
kind: template
layer: L1

info:
  title: "Entity (Core)"
  description: "Core reality-agnostic entity pattern for representing domain concepts, objects, and things"
  owners: ["spl-core"]
  tags: ["entity", "domain-concept", "core", "critical-pattern"]

contract:
  goal: "Represent a domain concept, object, or thing with properties, states, and behaviors"
  return_format: "Entity specification with identity, properties, states, lifecycle, and relationships"
  warnings:
    - "Entities represent 'what things are', not 'what patterns do'"
    - "Must define clear identity and lifecycle boundaries"
    - "Properties should be observable and verifiable"
    - "States must be mutually exclusive or clearly composable"
  context:
    - "Layer 1 core entity template"
    - "Reality-agnostic pattern"
    - "Foundation for all entity types (physical, digital, cognitive, hybrid)"
    - "Complements behavioral patterns (generator, validator, etc.)"
  inputs:
    - name: entity_specification
      type: object
      required: true
      description: "Specification of the entity being modeled"
      schema:
        name: string
        category: enum ["physical", "digital", "cognitive", "hybrid", "abstract"]
        properties: array  # Observable characteristics
        states: array      # Possible states
        lifecycle: object  # Creation, evolution, termination
    
    - name: entity_context
      type: object
      required: false
      description: "Context in which entity exists"
      schema:
        environment: string
        constraints: array
        relationships: array
  
  outputs:
    - name: entity_model
      type: object
      required: true
      description: "Complete entity model with all specifications"
      schema:
        identity: object
        properties: array
        states: array
        behaviors: array
        lifecycle: object
        relationships: array
  
  parameters:
    - name: abstraction_level
      type: enum
      options: [concrete, abstract, archetype, instance]
      description: "Level of abstraction for the entity"
      default: "concrete"

identity:
  domain: "spl.core"
  taxonomy: ["pattern", "entity", "domain-concept"]
  x-reality: ""  # Reality-agnostic (Layer 1)

relations:
  inherits_from: "spl/meta-pattern:v2.3"
  inheritance_mechanism:
    strategy: "extension"
    composition_rules:
      - "Entities can compose properties from multiple sources"
      - "States must be defined with clear transitions"
      - "Lifecycle stages must be ordered and well-defined"
  uses: []

selection:
  preferred_models: []
  preferred_tools: []
  constraints:
    - "Use for modeling 'things' not 'actions'"
    - "Prefer behavioral patterns for operations"
    - "Entities can have behaviors but are not behaviors themselves"

execution:
  steps:
    - "Define entity identity and category"
    - "Enumerate observable properties"
    - "Define possible states and transitions"
    - "Specify lifecycle stages (creation, evolution, termination)"
    - "Document relationships with other entities"
    - "Validate entity model completeness"

guarantees:
  success_criteria:
    - "Entity has clear identity and boundaries"
    - "Properties are observable and measurable"
    - "States are well-defined with clear transitions"
    - "Lifecycle is complete from creation to termination"
    - "Relationships are documented and typed"
  metrics:
    - name: "identity_clarity"
      description: "Clarity of entity identity"
      type: "qualitative"
    - name: "property_completeness"
      description: "Percentage of observable properties defined"
      type: "percentage"
    - name: "state_coverage"
      description: "Coverage of possible entity states"
      type: "percentage"
  rubric:
    pass:
      - "Entity identity clearly distinguishes it from other entities"
      - "All core properties documented"
      - "States and transitions validated"
      - "Lifecycle complete"
    fail:
      - "Ambiguous entity identity"
      - "Missing critical properties"
      - "Undefined states or invalid transitions"
      - "Incomplete lifecycle"
  validation_hooks:
    pre_validation:
      - "validate_entity_uniqueness"
      - "validate_property_observability"
    post_validation:
      - "validate_state_consistency"
      - "validate_lifecycle_completeness"
      - "validate_relationship_integrity"

content-specifications:
  sections:
    - title: "Entity Identity"
      required: true
      content: "Unique identification and classification of the entity"
    
    - title: "Properties"
      required: true
      content: "Observable and measurable characteristics of the entity"
    
    - title: "States"
      required: true
      content: "Possible states and state transitions"
    
    - title: "Lifecycle"
      required: true
      content: "Creation, evolution, and termination stages"
    
    - title: "Behaviors"
      required: false
      content: "Actions the entity can perform (references to behavioral patterns)"
    
    - title: "Relationships"
      required: false
      content: "Connections to other entities (composition, association, etc.)"

extension_points:
  layer: true      # Can be extended for different layers
  pattern: true    # Can be specialized for specific entity types
  reality: true    # Can be specialized for different realities (physical, digital, etc.)
  taxonomy: true   # Can be organized into taxonomic hierarchies

inheritance:
  invariants:
    identity: "All entities must have unique, stable identity"
    properties: "Properties must be observable in the entity's reality"
    states: "States must be mutually exclusive or clearly composable"
    lifecycle: "Must define creation and can optionally define termination"
  extension-rules:
    allow-additional-fields: true
    immutable-fields: ["identity", "lifecycle"]
    specialization-rules:
      - "L2 templates add reality-specific properties (physical dimensions, digital format, etc.)"
      - "L3 templates add technology-specific constraints (material types, data types, etc.)"
      - "L4 products define specific entity instances or archetypes"
      - "L5 solutions implement entity detection, creation, or management"
